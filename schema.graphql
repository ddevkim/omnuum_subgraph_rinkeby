
type Transaction @entity {
  id: ID! #transactionHash
  from: Bytes!
  to: Bytes
  gasUsed: BigInt!
  value: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  gasPrice: BigInt!
  # derived values
  requests: [Request!] @derivedFrom(field: "request_transaction")
  approvals: [Approval!] @derivedFrom(field: "approval_transactions")
  fees: [Fee!] @derivedFrom(field: "fee_transaction")
  contracts: [Contract!] @derivedFrom(field: "register_transaction")
}

type Request @entity {
  id: ID!  #reqId
  requester: Bytes! #msg.sender
  request_value: BigInt!
  withdrawal_value: BigInt!
  approval_count: BigInt!
  request_transaction: Transaction!
  withdrawal_transaction: Transaction
}

type Approval @entity {
  id: ID! #reqId + approverAddress
  approver: Bytes!
  is_last_approval_revoked: Boolean
  revoked_transactions: [Transaction!]
  approval_transactions: [Transaction!]!
  request_id: Request!
}

# id : transactionHash
type Fee @entity {
  id: ID! #transactionHash
  sender: Bytes! #msg.sender
  fee_transaction: Transaction!
}

type Contract @entity {
  id: ID! #nft contract address
  register_transaction: Transaction!
  remove_transaction: Transaction
  owner: Bytes!
  topic: String
  is_removed: Boolean!
}