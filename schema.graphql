enum PaymentTopic {
  DEPLOY_FEE
  MINT_FEE
  UNRECOGNIZED
}

enum MintTopic {
  TICKET
  PUBLIC
  AIRDROP
  UNRECOGNIZED
}

enum ContractTopic {
  CAMANAGER
  NFT
  VRF
  VERIFIER
  TICKET
  MINTMANAGER
  EXCHANGE
  WALLET
  REVEAL
  UNRECOGNIZED
}

enum VrfTopic {
  REVEAL_PFP
  UNRECOGNIZED
}


type Transaction @entity {
  "id: transactionHash(hex)"
  id: ID!
  block_number: BigInt!
  event_selectors: [String!]!
  from: Bytes!
  to: Bytes
  gas_used: BigInt!
  value: BigInt!
  timestamp: BigInt!
  gas_price: BigInt!

  "Derived Values"
  requests: [Request!] @derivedFrom(field: "request_transaction")
  approvals: [Approval!] @derivedFrom(field: "approval_transactions")
  payments: [Payment!] @derivedFrom(field: "payment_transaction")
  contract_registers: [Contract!] @derivedFrom(field: "register_transaction")
  contract_reveals: [Contract!] @derivedFrom(field: "set_uri_transaction")
  mintSchedules: [MintSchedule!] @derivedFrom(field: "mint_schedule_transaction")
  mints: [Mint!] @derivedFrom(field: "mint_transaction")
  nfts: [Nft!] @derivedFrom(field: "nft_transaction")
  reveal_random_requests: [Reveal!] @derivedFrom(field: "random_request_transaction")
  reveal_random_responses: [Reveal!] @derivedFrom(field: "random_response_transaction")
}

type Request @entity {
  "id: reqId(hex)"
  id: ID!
  block_number: BigInt!
  request_transaction: Transaction!
  withdrawal_transaction: Transaction
  requester: Bytes! #msg.sender
  request_value: BigInt!
  withdrawal_value: BigInt!
  approval_count: BigInt!
}

type Approval @entity {
  "id: reqId(hex)_approverAddress(hex)"
  id: ID!
  block_number: BigInt!
  revoked_transactions: [Transaction!]
  approval_transactions: [Transaction!]!
  approver: Bytes!
  is_last_approval_revoked: Boolean
  request_id: Request!
}

# id : transactionHash
type Payment @entity {
  "id: transactionHash(hex)_logIndex(hex)"
  id: ID!
  block_number: BigInt!
  payment_transaction: Transaction!
  sender: Bytes! #msg.sender
  value: BigInt! #msg.value
  topic: PaymentTopic
  description: String
}

type Contract @entity {
  "id: contractAddress(hex)"
  id: ID!
  block_number: BigInt!
  register_transaction: Transaction!
  remove_transaction: Transaction
  set_uri_transaction: Transaction
  owner: Bytes!
  topic: ContractTopic!
  is_removed: Boolean!
  is_revealed: Boolean
  max_supply: BigInt
  cover_url: String
  reveal_url: String
}

type Nft @entity {
  "id: nftContractAddress(hex)_tokenId(hex)"
  id: ID!
  block_number: BigInt!
  nft_transaction: Transaction!
  nft_contract: Contract!
  minter: Bytes!
  token_id: BigInt!
}

type MintSchedule @entity {
  "id: nftContractAddress(hex)_scheduleGroupId(hex)"
  id: ID!
  block_number: BigInt!
  mint_schedule_transaction: Transaction!
  nft_contract: Contract!
  topic: MintTopic
  group_id: BigInt!
  end_date: BigInt!
  base_price: BigInt
  mint_supply: BigInt
  max_qty_per_address: BigInt
}

type Mint @entity {
  "id: transactionHash(hex)_logIndex(hex)"
  id: ID!
  block_number: BigInt!
  mint_transaction: Transaction!
  nft_contract: Contract!
  mint_schedule: MintSchedule
  topic: MintTopic
  minter: Bytes!
  mint_quantity: BigInt!
  max_quantity: BigInt
  price: BigInt
}

type Reveal @entity {
  "id: requestId(hex)"
  id: ID!
  block_number: BigInt!
  nft_contract: Contract!
  random_request_transaction: Transaction
  random_response_transaction: Transaction
  topic: VrfTopic
  random_number: BigInt
}