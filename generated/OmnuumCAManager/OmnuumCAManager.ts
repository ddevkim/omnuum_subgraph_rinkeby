// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ManagerContractRegistered extends ethereum.Event {
  get params(): ManagerContractRegistered__Params {
    return new ManagerContractRegistered__Params(this);
  }
}

export class ManagerContractRegistered__Params {
  _event: ManagerContractRegistered;

  constructor(event: ManagerContractRegistered) {
    this._event = event;
  }

  get managerContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get topic(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class ManagerContractRemoved extends ethereum.Event {
  get params(): ManagerContractRemoved__Params {
    return new ManagerContractRemoved__Params(this);
  }
}

export class ManagerContractRemoved__Params {
  _event: ManagerContractRemoved;

  constructor(event: ManagerContractRemoved) {
    this._event = event;
  }

  get managerContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get topic(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class NftContractRegistered extends ethereum.Event {
  get params(): NftContractRegistered__Params {
    return new NftContractRegistered__Params(this);
  }
}

export class NftContractRegistered__Params {
  _event: NftContractRegistered;

  constructor(event: NftContractRegistered) {
    this._event = event;
  }

  get nftContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OmnuumCAManager extends ethereum.SmartContract {
  static bind(address: Address): OmnuumCAManager {
    return new OmnuumCAManager("OmnuumCAManager", address);
  }

  getContract(topic: string): Address {
    let result = super.call("getContract", "getContract(string):(address)", [
      ethereum.Value.fromString(topic)
    ]);

    return result[0].toAddress();
  }

  try_getContract(topic: string): ethereum.CallResult<Address> {
    let result = super.tryCall("getContract", "getContract(string):(address)", [
      ethereum.Value.fromString(topic)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isRegistered(CA: Address): boolean {
    let result = super.call("isRegistered", "isRegistered(address):(bool)", [
      ethereum.Value.fromAddress(CA)
    ]);

    return result[0].toBoolean();
  }

  try_isRegistered(CA: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isRegistered", "isRegistered(address):(bool)", [
      ethereum.Value.fromAddress(CA)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RegisterContractCall extends ethereum.Call {
  get inputs(): RegisterContractCall__Inputs {
    return new RegisterContractCall__Inputs(this);
  }

  get outputs(): RegisterContractCall__Outputs {
    return new RegisterContractCall__Outputs(this);
  }
}

export class RegisterContractCall__Inputs {
  _call: RegisterContractCall;

  constructor(call: RegisterContractCall) {
    this._call = call;
  }

  get CA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get topic(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RegisterContractCall__Outputs {
  _call: RegisterContractCall;

  constructor(call: RegisterContractCall) {
    this._call = call;
  }
}

export class RegisterContractMultipleCall extends ethereum.Call {
  get inputs(): RegisterContractMultipleCall__Inputs {
    return new RegisterContractMultipleCall__Inputs(this);
  }

  get outputs(): RegisterContractMultipleCall__Outputs {
    return new RegisterContractMultipleCall__Outputs(this);
  }
}

export class RegisterContractMultipleCall__Inputs {
  _call: RegisterContractMultipleCall;

  constructor(call: RegisterContractMultipleCall) {
    this._call = call;
  }

  get CAs(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get topics(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class RegisterContractMultipleCall__Outputs {
  _call: RegisterContractMultipleCall;

  constructor(call: RegisterContractMultipleCall) {
    this._call = call;
  }
}

export class RegisterNftContractCall extends ethereum.Call {
  get inputs(): RegisterNftContractCall__Inputs {
    return new RegisterNftContractCall__Inputs(this);
  }

  get outputs(): RegisterNftContractCall__Outputs {
    return new RegisterNftContractCall__Outputs(this);
  }
}

export class RegisterNftContractCall__Inputs {
  _call: RegisterNftContractCall;

  constructor(call: RegisterNftContractCall) {
    this._call = call;
  }

  get _nftContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _initialOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RegisterNftContractCall__Outputs {
  _call: RegisterNftContractCall;

  constructor(call: RegisterNftContractCall) {
    this._call = call;
  }
}

export class RemoveContractCall extends ethereum.Call {
  get inputs(): RemoveContractCall__Inputs {
    return new RemoveContractCall__Inputs(this);
  }

  get outputs(): RemoveContractCall__Outputs {
    return new RemoveContractCall__Outputs(this);
  }
}

export class RemoveContractCall__Inputs {
  _call: RemoveContractCall;

  constructor(call: RemoveContractCall) {
    this._call = call;
  }

  get CA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveContractCall__Outputs {
  _call: RemoveContractCall;

  constructor(call: RemoveContractCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
